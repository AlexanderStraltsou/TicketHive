@page
@using TicketHive.Server.Data
@inject AppDbContext _context
@model TicketHive.Ui.Pages.Display.BookingPageModel
@{
}



<div class="row">
    <style>
        #search-input {
            width: 100%;
            max-width: 800px;
            height: 40px;
            border: 2px solid #ccc;
            border-radius: 4px;
            padding: 8px;
            font-size: 16px;
            box-sizing: border-box;
        }

        body{
            background-color: #fbe89c;
        }

        .card {
            color: #fbe89c;
            background-color: #305076;
        }

        .card-img-top {
            padding: 5px;
            border-top-left-radius: 4%;
            border-top-right-radius: 4%;
        }

         .card-row {
            display: flex;
            flex-wrap: wrap;
            margin-right: -15px;
            margin-left: -15px;
         }

         
         #btnCard{
            display: inline-block;
            outline: 0;
            cursor: pointer;
            border-radius: 6px;
            border: 2px solid #fbe89c;
            color: #fbe89c;
            background: 0 0;
            padding: 8px;
            box-shadow: rgba(0, 0, 0, 0.07) 0px 2px 4px 0px, rgba(0, 0, 0, 0.05) 0px 1px 1.5px 0px;
            font-weight: 600;
            font-size: 16px;
            height: 42px;
         }

         
         #btnCard:hover{
            background-color: #fbe89c;
            color: #305076;
         }

         #btnSort{
            margin-top: 10px;
            margin-bottom: 10px;
            display: inline-block;
            outline: 0;
            cursor: pointer;
            border-radius: 6px;
            border: 2px solid #fbe89c;
            color: #fbe89c;
            background-color: #305076;
            padding: 8px;
            box-shadow: rgba(0, 0, 0, 0.07) 0px 2px 4px 0px, rgba(0, 0, 0, 0.05) 0px 1px 1.5px 0px;
            font-weight: 500;
            font-size: 12px;
            height: 42px;
         }
          

    </style>

    <div class="row">
        <div class="col-md-12">
            <input type="text" id="search-input" placeholder="Search for an Event..." asp-for="SearchInput">
        </div>
        
       
    </div>

    

    <div class="btn-toolbar" role="toolbar">
        <div class="btn-group mr-2" role="group">
            <button type="button" class="btn btn-primary btn-sm" id="btnSort" onclick="sortByPrice()">Sort by Price</button>
        </div>
       @* <div class="btn-group mr-2" role="group">
            <button type="button" class="btn btn-primary btn-sm" onclick="sortByDate()">Sort by Date</button>
        </div>
        *@
    </div>

    
    <div class="card-container row">
        <form id="booking-form" method="post">
            <div class="card-row row">
                @foreach (var eventModel in Model.Events)
                {
                    <div class="event-card col-md-3">
                        <div class="card mb-3 @((eventModel.IsSoldOut) ? "sold-out" : "")">
                            <img src="~/EventImages/@eventModel.Image" class="card-img-top" alt="...">
                            <div class="card-body text-center">
                                <h5 class="card-title">@eventModel.Name</h5>
                                <p class="card-text">@eventModel.EventType</p>
                                <p class="card-text">@eventModel.DateTime</p>
                                <p class="card-text">@eventModel.Location</p>
                                <p class="card-text">@eventModel.TicketPrice SEK </p>
                                <div class="text-center">
                                    <a href="@Url.Page("EventPage", new { id = eventModel.Id })" class="btn" id="btnCard">Details</a>
                                    @if (!eventModel.IsSoldOut)
                                    {
                                            <input id="event-input" hidden asp-for="EventId" />
                                            <button class="btn" id="btnCard" onclick="addToCart(@eventModel.Id)">Add To Cart</button>
                          
                                    }
                                    else
                                    {
                                        <button class="btn btn-secondary" disabled>Sold Out</button>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </form>
    </div>

</div>




    <script>
    const searchInput = document.getElementById('search-input');

    const cards = document.querySelectorAll('.card');


    searchInput.addEventListener('input', (event) => {

        

        const searchTerm = searchInput.value.toLowerCase();

        cards.forEach((card) => {
            const eventName = card.querySelector('.card-title').textContent.toLowerCase();
            const eventType = card.querySelector('.card-text:nth-child(2)').textContent.toLowerCase();
            const eventDate = card.querySelector('.card-text:nth-child(3)').textContent.toLowerCase();
            const eventLocation = card.querySelector('.card-text:nth-child(4)').textContent.toLowerCase();
            const eventPrice = card.querySelector('.card-text:nth-child(5)').textContent.toLowerCase();

            if (eventName.includes(searchTerm) ||
                eventType.includes(searchTerm) ||
                eventDate.includes(searchTerm) ||
                eventLocation.includes(searchTerm) ||
                eventPrice.includes(searchTerm)) {
                card.style.opacity = '1';
            } else {
                card.style.opacity = '0.2';
            }
        });
    });

    function sortByPrice() {
        const cards = document.querySelectorAll('.card');
        const cardArray = Array.from(cards);
        cardArray.sort((a, b) => {
            const priceA = parseInt(a.querySelector('.card-text:nth-child(5)').textContent);
            const priceB = parseInt(b.querySelector('.card-text:nth-child(5)').textContent);
            return priceA - priceB;
        });
        const cardContainer = document.querySelector('.card-container');
        cardContainer.innerHTML = '';
        cardArray.forEach(card => cardContainer.appendChild(card));
    }

    function sortByDate() {
        const cards = document.querySelectorAll('.card');
        const cardArray = Array.from(cards);
        cardArray.sort((a, b) => {
            const dateA = new Date(a.querySelector('.card-text:nth-child(3)').textContent);
            const dateB = new Date(b.querySelector('.card-text:nth-child(3)').textContent);
            return dateA.getTime() - dateB.getTime();
        });
        const cardContainer = document.querySelector('.row');
        cardContainer.innerHTML = '';
        cardArray.forEach(card => cardContainer.appendChild(card));
    }
    function addToCart(eventId) {
        document.querySelector("#event-input").value = eventId;
        document.querySelector("#booking-form").submit();
                    
        //// redirect to the "/member/basket" page
        //window.location.href = "/member/basket";
    }


   
    </script>
